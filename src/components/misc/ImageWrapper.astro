---
import path from "node:path";
import { Image } from 'astro:assets';
import { url } from "../../utils/url-utils";

const {src, alt, position = 'center', basePath = '/'} = Astro.props;
const className = Astro.props.class;

const isLocal = !(src.startsWith('/') || src.startsWith('http') || src.startsWith('https') || src.startsWith('data:'));
const isPublic = src.startsWith('/');

let img: ImageMetadata | null = null;
if (isLocal) {
    const files = import.meta.glob<ImageMetadata>("../../**", { import: 'default' });
    const normalizedPath = path.normalize(path.join("../../", basePath, src)).replace(/\\/g, "/");
    img = await (files[normalizedPath])();
}

const imageClass = 'w-full h-full object-cover';
const imageStyle = `object-position: ${position}`
---
<div class:list={[className, 'overflow-hidden relative']}>
    <div class="transition absolute inset-0 dark:bg-black/10 bg-opacity-50 pointer-events-none"></div>
    {isLocal && img !== null && <Image src={img} alt={alt || ""} class={imageClass} style={imageStyle}/>}
    {!isLocal && <img src={isPublic ? url(src) : src} alt={alt || ""} class={imageClass} style={imageStyle}/>}
</div>